{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","visibleList","goods","mutableGoods","filterByLength","reset","setState","reverse","sortArr","sort","good1","good2","localeCompare","length","handleChange","event","target","name","value","parseFloat","selectOptionArr","i","push","this","className","filter","good","map","key","type","onClick","onChange","option","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2OAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAuIaC,E,4MAnIbC,MAAQ,CACNC,aAAa,EACbC,MAAOJ,EACPK,aAAa,GAAD,OAAML,GAClBM,eAAgB,G,EAGlBC,MAAQ,WACN,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACtBG,aAAa,YAAKH,EAAME,OACxBE,eAAgB,O,EAIpBG,QAAU,WACR,EAAKD,UAAS,SAAAN,GAAK,MAAK,CAAEG,aAAcH,EAAMG,aAAaI,e,EAG7DC,QAAU,SAACC,GACT,EAAKH,UAAS,SAAAN,GAAK,MAAK,CAAEG,aAAcH,EAAMG,aAC3CM,MAAK,SAACC,EAAOC,GACZ,OAAQF,GACN,IAAK,mBACH,OAAOC,EAAME,cAAcD,GAG7B,IAAK,WACH,OAAOD,EAAMG,OAASF,EAAME,OAG9B,QACE,OAAO,W,EAKjBC,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAKZ,UAAS,SAAAN,GAAK,sBAChBiB,EAAOE,WAAWD,Q,4CAIvB,WAIE,IAJQ,IAAD,OACDE,EAAkB,GAGfC,EAAI,EAAGA,GAAK,GAAIA,IACvBD,EAAgBE,KAAKD,GAGvB,MAAsDE,KAAKvB,MAAnDC,EAAR,EAAQA,YAAaG,EAArB,EAAqBA,eAAgBD,EAArC,EAAqCA,aAErC,OACE,yBAAKqB,UAAU,OACb,qCACEvB,EAYE,wBAAIuB,UAAU,QACXrB,EAAasB,QAAO,SAAAC,GAAI,OAAIA,EAAKb,QAAUT,KACzCuB,KAAI,SAAAD,GAAI,OACP,wBAAIE,IAAKF,GACNA,OAdT,4BACEG,KAAK,SACLC,QAAS,WACP,EAAKxB,SAAS,CAAEL,aAAa,MAHjC,SAoBHA,GAEC,yBAAKuB,UAAU,WACb,4BACEK,KAAK,SACLC,QAASP,KAAKhB,SAFhB,WAMA,4BACEsB,KAAK,SACLC,QAAS,WACP,EAAKtB,QAAQ,sBAHjB,uBAQA,4BACEqB,KAAK,SACLC,QAAS,WACP,EAAKtB,QAAQ,cAHjB,kBAQA,4BACEqB,KAAK,SACLC,QAASP,KAAKlB,OAFhB,SAMA,yBAAKmB,UAAU,OACb,4BACEP,KAAK,iBACLC,MAAOd,EACP2B,SAAUR,KAAKT,cAEdM,EAAgBO,KAAI,SAAAK,GAAM,OACzB,4BAAQd,MAAOc,EAAQJ,IAAKI,GACzBA,c,GAvHHC,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.adad59f2.chunk.js","sourcesContent":["/* eslint-disable no-unreachable */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    visibleList: false,\n    goods: goodsFromServer,\n    mutableGoods: [...goodsFromServer],\n    filterByLength: 1,\n  }\n\n  reset = () => {\n    this.setState(state => ({\n      mutableGoods: [...state.goods],\n      filterByLength: 1,\n    }));\n  }\n\n  reverse = () => {\n    this.setState(state => ({ mutableGoods: state.mutableGoods.reverse() }));\n  }\n\n  sortArr = (sort) => {\n    this.setState(state => ({ mutableGoods: state.mutableGoods\n      .sort((good1, good2) => {\n        switch (sort) {\n          case 'byAlphabetically':\n            return good1.localeCompare(good2);\n\n            break;\n          case 'byLength':\n            return good1.length - good2.length;\n\n            break;\n          default:\n            return 0;\n        }\n      }) }));\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      [name]: parseFloat(value),\n    }));\n  }\n\n  render() {\n    const selectOptionArr = [];\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 1; i <= 10; i++) {\n      selectOptionArr.push(i);\n    }\n\n    const { visibleList, filterByLength, mutableGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {!visibleList\n          ? (\n            <button\n              type=\"submit\"\n              onClick={() => {\n                this.setState({ visibleList: true });\n              }}\n            >\n              Start\n            </button>\n          )\n          : (\n            <ol className=\"list\">\n              {mutableGoods.filter(good => good.length <= filterByLength)\n                .map(good => (\n                  <li key={good}>\n                    {good}\n                  </li>\n                ))}\n            </ol>\n          )\n        }\n        {visibleList\n          && (\n          <div className=\"buttons\">\n            <button\n              type=\"submit\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"submit\"\n              onClick={() => {\n                this.sortArr('byAlphabetically');\n              }}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"submit\"\n              onClick={() => {\n                this.sortArr('byLength');\n              }}\n            >\n              Sort by length\n            </button>\n            <button\n              type=\"submit\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n            <div className=\"box\">\n              <select\n                name=\"filterByLength\"\n                value={filterByLength}\n                onChange={this.handleChange}\n              >\n                {selectOptionArr.map(option => (\n                  <option value={option} key={option}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}